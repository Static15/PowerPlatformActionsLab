name: export-and-branch-solution
# Export solution from DEV environment
# Unpack it and prepare, commit, and push a git branch with the changes

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to be worked on from Power Platform'
        required: true
        default: ALMGitHUB
      solution_exported_folder:
        description: 'Folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
        description: 'Folder name to be created and checked in *do not change*'
        required: true
        default: solutions/

env:
  # Edit your values here
  ENVIRONMENT_URL: 'https://org31cddccd.api.crm4.dynamics.com'
  CLIENT_ID: '1af267f9-3dd0-4cec-8f94-574a5ae46f4a'
  TENANT_ID: 'fd799da1-bfc1-4234-a91c-72b3a1cb9e26'

permissions:
  contents: write

jobs:
  export-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{ env.ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID }}

    - name: export unmanaged solution action
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{ env.ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder }}/{{ github.event.inputs.solution_name }}-unmanaged.zip

    - name: export managed solution action
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{ env.ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder }}/{{ github.event.inputs.solution_name }}-managed.zip
        solution-type: 'Managed'

    - name: unpack unmanaged solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder }}/{{ github.event.inputs.solution_name }}-unmanaged.zip
        solution-folder: ${{ github.event.inputs.solution_folder }}/{{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: unpack managed solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder }}/{{ github.event.inputs.solution_name }}-managed.zip
        solution-folder: ${{ github.event.inputs.solution_folder }}/{{ github.event.inputs.solution_name }}-managed
        solution-type: 'Managed'
        overwrite-files: true

    - name: create artifact for unmanaged solution
      uses: actions/upload-artifact@v3
      with:
        name: unmanaged-solution
        path: ${{ github.event.inputs.solution_exported_folder }}/{{ github.event.inputs.solution_name }}-unmanaged.zip

    - name: create artifact for managed solution
      uses: actions/upload-artifact@v3
      with:
        name: managed-solution
        path: ${{ github.event.inputs.solution_exported_folder }}/{{ github.event.inputs.solution_name }}-managed.zip

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder }}/{{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder }}/{{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
